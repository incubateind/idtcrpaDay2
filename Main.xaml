<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1350,3789" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ape="clr-namespace:App_Integration.PDF.Extensions;assembly=UiPathTeam.PDF.Extensions.Activities" xmlns:bz="clr-namespace:BalaReva.ZipUnzip;assembly=BalaReva.Zip" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>App_Integration.PDF.Extensions</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.ZipUnzip</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPathTeam.PDF.Extensions.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.Zip</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadPDF" sap:VirtualizedContainerService.HintSize="1360,3624" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="si:StreamReader" Name="sr" />
      <Variable x:TypeArguments="str:Regex" Name="regex" />
      <Variable x:TypeArguments="str:MatchCollection" Name="matches" />
      <Variable x:TypeArguments="x:String" Name="path" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)]" Name="listPage" />
      <Variable x:TypeArguments="x:String" Name="keyword" />
      <Variable x:TypeArguments="x:String" Name="Pwd" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1318,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[path]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">C:\Users\KAS323\Documents\Challenge\Challenge_2\Input\InputPDF.pdf</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1318,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[keyword]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">UiPath</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="1318,238" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please enter the keyword to search" Title="Search Text">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[keyword]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <Assign sap:VirtualizedContainerService.HintSize="1318,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="si:StreamReader">[sr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="si:StreamReader">[new StreamReader(path.Trim)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="pdfread" sap:VirtualizedContainerService.HintSize="1318,2716" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="page" />
        <Variable x:TypeArguments="x:Int32" Name="Pages" />
        <Variable x:TypeArguments="x:Int32" Default="1" Name="startPage" />
        <Variable x:TypeArguments="x:Int32" Name="Range" />
        <Variable x:TypeArguments="x:String" Name="PagesToRead" />
        <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)]" Name="NolistPage" />
        <Variable x:TypeArguments="s:String[]" Name="FoundPageNo" />
        <Variable x:TypeArguments="s:String[]" Name="matchinFoudFiles" />
        <Variable x:TypeArguments="s:String[]" Name="matchingNotFoudFiles" />
        <Variable x:TypeArguments="s:String[]" Name="ZipFils" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[path]" sap:VirtualizedContainerService.HintSize="1276,59" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[Pages]" />
      <Assign sap:VirtualizedContainerService.HintSize="1276,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[Range]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">1</InArgument>
        </Assign.Value>
      </Assign>
      <While sap:VirtualizedContainerService.HintSize="1276,1418" sap2010:WorkflowViewState.IdRef="While_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <While.Condition>
          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="startPage&lt;Pages" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
        </While.Condition>
        <Sequence sap:VirtualizedContainerService.HintSize="1230,1260" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="result" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[Pages-startPage&gt;1]" sap:VirtualizedContainerService.HintSize="1188,1168" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="839,1010" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write line" sap:VirtualizedContainerService.HintSize="797,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Robot is reading Page :&quot;+startPage.ToString]" />
                <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PagesToRead]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[startPage.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[path]" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="[PagesToRead]" Text="[result]" />
                <If Condition="[result.Contains(keyword.Trim)]" sap:VirtualizedContainerService.HintSize="797,518" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,360" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <AddToCollection x:TypeArguments="x:String" Collection="[listPage]" DisplayName="Add to collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[startPage.ToString]" />
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="Output\Found\" />
                      <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="Input\InputPDF.pdf" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_2" OutputFileName="[&quot;Output\Found\&quot;+startPage.ToString+&quot;.pdf&quot;]" Range="[PagesToRead]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,360" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <AddToCollection x:TypeArguments="x:String" Collection="[NolistPage]" DisplayName="Add to collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[startPage.ToString]" />
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="Output\NotFound\" />
                      <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="Input\InputPDF.pdf" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_4" OutputFileName="[&quot;Output\NotFound\&quot;+startPage.ToString+&quot;.pdf&quot;]" Range="[PagesToRead]" />
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[startPage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[startPage+Range]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="304,353" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write line" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Robot is reading Page :&quot;+startPage.ToString]" />
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[PagesToRead]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[startPage.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[startPage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[Pages]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </While>
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="1276,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Page Number in which keyword Exits &quot;+string.Join(&quot;,&quot;,listPage)]" />
      <WriteLine DisplayName="Write line" sap:VirtualizedContainerService.HintSize="1276,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Page Number in which keyword Exits &quot;+string.Join(&quot;,&quot;,listPage)]" />
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1276,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Keyword Not Exists in &quot;+string.Join(&quot;,&quot;,NolistPage)]" />
      <Assign sap:VirtualizedContainerService.HintSize="1276,60" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[matchinFoudFiles]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Output\Found")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="1276,60" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[matchingNotFoudFiles]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Output\NotFound")]</InArgument>
        </Assign.Value>
      </Assign>
      <ape:MergePDFFiles DisplayName="Merge PDF Files" sap:VirtualizedContainerService.HintSize="1276,132" sap2010:WorkflowViewState.IdRef="MergePDFFiles_2" OutputFile="Data\Found.pdf" SourceFiles="[matchinFoudFiles]" />
      <ape:MergePDFFiles DisplayName="Merge PDF Files" sap:VirtualizedContainerService.HintSize="1276,132" sap2010:WorkflowViewState.IdRef="MergePDFFiles_4" OutputFile="Data\NotFound.pdf" SourceFiles="[matchingNotFoudFiles]" />
      <Assign sap:VirtualizedContainerService.HintSize="1276,60" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[ZipFils]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Data\")]</InArgument>
        </Assign.Value>
      </Assign>
      <bz:ZipFilesCls Password="{x:Null}" DisplayName="Zip" FolderFilesPath="[ZipFils]" sap:VirtualizedContainerService.HintSize="1276,22" sap2010:WorkflowViewState.IdRef="ZipFilesCls_1" ZipFile="C:\Users\KAS323\Documents\UiPath\idtcrpaDay2\Challege2.zip" />
    </Sequence>
    <ui:GetPassword DisplayName="Get Password" sap:VirtualizedContainerService.HintSize="1318,22" sap2010:WorkflowViewState.IdRef="GetPassword_2" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAgiG93MwhIky9RPxrTe7FBQAAAAACAAAAAAAQZgAAAAEAACAAAABENyfxt9mvhOqmvOcKodkO3lbQFfZ2hrjQNeB4GsYRLwAAAAAOgAAAAAIAACAAAABqn9GyQhUeUajRcWm0Wu7nC0TMolBEJnfnymuWOWacnBAAAABxMjAn46+CsOMfkeLkNKkXQAAAAHathirm4wSMbBzHqLq7cyn2MGD5snTiNgFMYuILUco9OyGJkP9YQS8xJ7gyBBSSfxu/j+LWi5TII0WrwDhF+es=" Result="[Pwd]" />
    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi Team,&quot;+&quot;&lt;br&gt;&lt;br&gt;&quot;+&quot;The Day - 2 Challenge job has completed.Please find the attached Zip File.&quot;+&quot;&lt;br&gt;&quot;+&quot;&lt;b&gt;Date :&lt;/b&gt;&quot;+now.toString(&quot;MM/dd/yyyy&quot;)+&quot;&lt;br&gt;&quot;+&quot;&lt;b&gt;Time :&lt;/b&gt;&quot;+now.ToString(&quot;hh:mm tt&quot;)+&quot;&lt;br&gt;&lt;br&gt;&quot;+&quot;Thank you,&quot;+&quot;&lt;br&gt;&quot;+&quot;Sindhura.V&quot;]" DisplayName="Send SMTP Mail Message" Email="sindhura.gupta31@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="1318,145" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Password="[pwd]" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Challenge Day -2 " To="Sindhura.gupta31@gmail.com">
      <ui:SendMail.Files>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String">C:\Users\KAS323\Documents\UiPath\idtcrpaDay2\Challege2.zip</Literal>
          </InArgument>
        </scg:List>
      </ui:SendMail.Files>
    </ui:SendMail>
  </Sequence>
</Activity>